/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HistorySupport as PrismaHistorySupport } from "@prisma/client";

export class HistorySupportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HistorySupportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.historySupport.count(args);
  }

  async historySupports(
    args: Prisma.HistorySupportFindManyArgs
  ): Promise<PrismaHistorySupport[]> {
    return this.prisma.historySupport.findMany(args);
  }
  async historySupport(
    args: Prisma.HistorySupportFindUniqueArgs
  ): Promise<PrismaHistorySupport | null> {
    return this.prisma.historySupport.findUnique(args);
  }
  async createHistorySupport(
    args: Prisma.HistorySupportCreateArgs
  ): Promise<PrismaHistorySupport> {
    return this.prisma.historySupport.create(args);
  }
  async updateHistorySupport(
    args: Prisma.HistorySupportUpdateArgs
  ): Promise<PrismaHistorySupport> {
    return this.prisma.historySupport.update(args);
  }
  async deleteHistorySupport(
    args: Prisma.HistorySupportDeleteArgs
  ): Promise<PrismaHistorySupport> {
    return this.prisma.historySupport.delete(args);
  }
}
