/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RankUser as PrismaRankUser,
  User as PrismaUser,
} from "@prisma/client";

export class RankUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RankUserCountArgs, "select">): Promise<number> {
    return this.prisma.rankUser.count(args);
  }

  async rankUsers(
    args: Prisma.RankUserFindManyArgs
  ): Promise<PrismaRankUser[]> {
    return this.prisma.rankUser.findMany(args);
  }
  async rankUser(
    args: Prisma.RankUserFindUniqueArgs
  ): Promise<PrismaRankUser | null> {
    return this.prisma.rankUser.findUnique(args);
  }
  async createRankUser(
    args: Prisma.RankUserCreateArgs
  ): Promise<PrismaRankUser> {
    return this.prisma.rankUser.create(args);
  }
  async updateRankUser(
    args: Prisma.RankUserUpdateArgs
  ): Promise<PrismaRankUser> {
    return this.prisma.rankUser.update(args);
  }
  async deleteRankUser(
    args: Prisma.RankUserDeleteArgs
  ): Promise<PrismaRankUser> {
    return this.prisma.rankUser.delete(args);
  }

  async getRankUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.rankUser
      .findUnique({
        where: { id: parentId },
      })
      .rankUser();
  }
}
