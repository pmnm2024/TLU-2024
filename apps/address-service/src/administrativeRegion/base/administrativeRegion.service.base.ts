/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  AdministrativeRegion as PrismaAdministrativeRegion,
  Province as PrismaProvince,
} from "@prisma/client";

export class AdministrativeRegionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AdministrativeRegionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.administrativeRegion.count(args);
  }

  async administrativeRegions(
    args: Prisma.AdministrativeRegionFindManyArgs
  ): Promise<PrismaAdministrativeRegion[]> {
    return this.prisma.administrativeRegion.findMany(args);
  }
  async administrativeRegion(
    args: Prisma.AdministrativeRegionFindUniqueArgs
  ): Promise<PrismaAdministrativeRegion | null> {
    return this.prisma.administrativeRegion.findUnique(args);
  }
  async createAdministrativeRegion(
    args: Prisma.AdministrativeRegionCreateArgs
  ): Promise<PrismaAdministrativeRegion> {
    return this.prisma.administrativeRegion.create(args);
  }
  async updateAdministrativeRegion(
    args: Prisma.AdministrativeRegionUpdateArgs
  ): Promise<PrismaAdministrativeRegion> {
    return this.prisma.administrativeRegion.update(args);
  }
  async deleteAdministrativeRegion(
    args: Prisma.AdministrativeRegionDeleteArgs
  ): Promise<PrismaAdministrativeRegion> {
    return this.prisma.administrativeRegion.delete(args);
  }

  async findProvinces(
    parentId: string,
    args: Prisma.ProvinceFindManyArgs
  ): Promise<PrismaProvince[]> {
    return this.prisma.administrativeRegion
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .provinces(args);
  }
}
