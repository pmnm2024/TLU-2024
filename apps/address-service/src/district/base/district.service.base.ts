/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  District as PrismaDistrict,
  Ward as PrismaWard,
  AdministrativeUnit as PrismaAdministrativeUnit,
  Province as PrismaProvince,
} from "@prisma/client";

export class DistrictServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DistrictCountArgs, "select">): Promise<number> {
    return this.prisma.district.count(args);
  }

  async districts(
    args: Prisma.DistrictFindManyArgs
  ): Promise<PrismaDistrict[]> {
    return this.prisma.district.findMany(args);
  }
  async district(
    args: Prisma.DistrictFindUniqueArgs
  ): Promise<PrismaDistrict | null> {
    return this.prisma.district.findUnique(args);
  }
  async createDistrict(
    args: Prisma.DistrictCreateArgs
  ): Promise<PrismaDistrict> {
    return this.prisma.district.create(args);
  }
  async updateDistrict(
    args: Prisma.DistrictUpdateArgs
  ): Promise<PrismaDistrict> {
    return this.prisma.district.update(args);
  }
  async deleteDistrict(
    args: Prisma.DistrictDeleteArgs
  ): Promise<PrismaDistrict> {
    return this.prisma.district.delete(args);
  }

  async findWards(
    parentId: string,
    args: Prisma.WardFindManyArgs
  ): Promise<PrismaWard[]> {
    return this.prisma.district
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .wards(args);
  }

  async getAdministrativeUnit(
    parentId: string
  ): Promise<PrismaAdministrativeUnit | null> {
    return this.prisma.district
      .findUnique({
        where: { id: parentId },
      })
      .administrativeUnit();
  }

  async getProvince(parentId: string): Promise<PrismaProvince | null> {
    return this.prisma.district
      .findUnique({
        where: { id: parentId },
      })
      .province();
  }
}
