http:
  port: 9000

https:
  port: 9876
  hostname: localhost

apiEndpoints:
  api:
    host: "*"
    paths: "/ip"
  account:
    methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    host: "*"
    paths: "/api/user*"
  register:
    methods: ["POST"]
    host: "*"
    paths: "/api/user*"
  auth:
    methods: ["POST"]
    host: "*"
    paths: 
        - "/api/login"
  notification:
    methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    host: "*"
    paths: "/api/notifications*"
  donation:
    methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    host: "*"
    paths: "/api/donations*"
  mail:
    methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    host: "*"
    paths: "/api/mails*"
  supportRequest:
    methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    host: "*"
    paths: "/api/supportRequests*"
  warehouse:
    methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    host: "*"
    paths: "/api/warehouses*"
serviceEndpoints:
  httpbin:
    url: "https://httpbin.org"
  accountService:
    url: "http://user:8000"
  authService:
    url: "http://user:8000"
  notificationService:
    url: "http://notification:8001"
  donationService:
    url: "http://donation:8005"
  mailService:
    url: "http://mail:8004"
  supportRequestService:
    url: "http://supportRequest:8006"
  warehouseService:
    url: "http://warehouse:8002"
policies:
  - cors
  - log
  - proxy
  - request-transformer
  # - jwt
  - jwt-decoder-policy
  - log-policy
  - rate-limit

  # - express-gateway-plugin-example

pipelines:
  bin:
    apiEndpoints:
      - api
    policies:
      - jwt-decoder-policy:
          action:
              secret: 'asasasa'
      - proxy:
          - action:
              serviceEndpoint: httpbin
              changeOrigin: true
  account:
    apiEndpoints:
      - account
    policies:
      - jwt-decoder-policy:
            action:
                secret: 'asasasa'
      - log:
          - action:
              message: "${req.method} ${req.originalUrl}"
      - request-transformer:
          - action:
              headers:
                add:
                  requestID: "requestID"
                  user: req.user
      - proxy:
          - action:
              serviceEndpoint: accountService

  auth:
    apiEndpoints:
      - auth
    policies:
      - cors:
          - action:
              origin: "*"
              methods: "*"
              preflightContinue: false
              optionsSuccessStatus: 204
      - log:
          - action:
              message: "${req.method} ${req.originalUrl}"
      - request-transformer:
          - action:
              headers:
                add:
                  requestID: "requestID"
                  # user: req.user
      - proxy:
          - action:
              serviceEndpoint: authService
  notification:
    apiEndpoints:
      - notification
    policies:
      # - jwt-decoder-policy:
      #     action:
      #         secret: 'asasasa'
      - log:
          - action:
              message: "${req.method} ${req.originalUrl}"
      - log-policy:
          - action:
              logLevel: "debug"
      - request-transformer:
          - action:
              headers:
                add:
                  requestID: "requestID"
                  # user: req.user
      - proxy:
          - action:
              serviceEndpoint: notificationService
  mail:
    apiEndpoints:
      - mail
    policies:
      # - jwt-decoder-policy:
      #     action:
      #         secret: 'asasasa'
      - log:
          - action:
              message: "${req.method} ${req.originalUrl}"
      - log-policy:
          - action:
              logLevel: "debug"
      - request-transformer:
          - action:
              headers:
                add:
                  requestID: "requestID"
                  # user: req.user
      - proxy:
          - action:
              serviceEndpoint: mailService
  donation:
    apiEndpoints:
      - donation
    policies:
      - jwt-decoder-policy:
            action:
                secret: 'asasasa'
      - log:
          - action:
              message: "${req.method} ${req.originalUrl}"
      - request-transformer:
          - action:
              headers:
                add:
                  requestID: "requestID"
                  user: req.user
      - proxy:
          - action:
              serviceEndpoint: donationService
  supportRequest:
    apiEndpoints:
      - supportRequest
    policies:
      - jwt-decoder-policy:
            action:
                secret: 'asasasa'
      - log:
          - action:
              message: "${req.method} ${req.originalUrl}"
      - request-transformer:
          - action:
              headers:
                add:
                  requestID: "requestID"
                  user: req.user
      - proxy:
          - action:
              serviceEndpoint: supportRequestService
    warehouse:
        apiEndpoints:
          - warehouse
        policies:
          - jwt-decoder-policy:
                action:
                    secret: 'asasasa'
          - log:
              - action:
                  message: "${req.method} ${req.originalUrl}"
          - request-transformer:
              - action:
                  headers:
                    add:
                      requestID: "requestID"
                      user: req.user
          - proxy:
              - action:
                  serviceEndpoint: warehouseService

