version: "3.3"
services:
  support-request:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    ports:
      - ${PORT}:8003
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      DB_URL: mysql://${DB_USER}:${DB_PASSWORD}@db:33062/${DB_NAME}
    depends_on:
      - migrate
    restart: on-failure
    volumes:
      - support-request-data:/app/data 
    networks:
      - app-network
  migrate:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    command: npm run db:init
    working_dir: /app/support-request
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      DB_URL: mysql://${DB_USER}:${DB_PASSWORD}@db:33062/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
  adminer:
    image: adminer
    restart: always
    ports:
      - 1234:8080
  db:
    image: mysql:8.3
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - ${DB_PORT}:33062
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - -h
        - localhost
        - -u
        - ${DB_USER}
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
    - mysql-data:/var/lib/mysql
    app-network: 
    - app-network
volumes:
  mysql-data:
  support-request-data:
networks:
  app-network:
    external: true