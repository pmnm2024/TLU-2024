/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { EnumSupportRequestStatus } from "./EnumSupportRequestStatus";
import { SupportRequestDetailUpdateManyWithoutSupportRequestsInput } from "./SupportRequestDetailUpdateManyWithoutSupportRequestsInput";
import { Type } from "class-transformer";
import { SupportRequestTypeWhereUniqueInput } from "../../supportRequestType/base/SupportRequestTypeWhereUniqueInput";

@InputType()
class SupportRequestUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  detailAdrdess?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  district?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullname?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  quantity?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumSupportRequestStatus,
  })
  @IsEnum(EnumSupportRequestStatus)
  @IsOptional()
  @Field(() => EnumSupportRequestStatus, {
    nullable: true,
  })
  status?: "Pending" | "Processed";

  @ApiProperty({
    required: false,
    type: () => SupportRequestDetailUpdateManyWithoutSupportRequestsInput,
  })
  @ValidateNested()
  @Type(() => SupportRequestDetailUpdateManyWithoutSupportRequestsInput)
  @IsOptional()
  @Field(() => SupportRequestDetailUpdateManyWithoutSupportRequestsInput, {
    nullable: true,
  })
  supportRequestDetails?: SupportRequestDetailUpdateManyWithoutSupportRequestsInput;

  @ApiProperty({
    required: false,
    type: () => SupportRequestTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SupportRequestTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => SupportRequestTypeWhereUniqueInput, {
    nullable: true,
  })
  supportRequestTypeID?: SupportRequestTypeWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ward?: string;
}

export { SupportRequestUpdateInput as SupportRequestUpdateInput };
