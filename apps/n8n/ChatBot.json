{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const messages = $input.all().map((item) => item.json);\n// console.log(messages[0].choices[0].message.content)\n// const emergencyMessages = messages.map((message) => {\n//   const text = message.message.text.toLowerCase();\n//   return text;\n// });\n\n// const isEmergency = emergencyKeywords.some(keyword => \n//   emergencyMessages[0].toLowerCase().includes(keyword)\n// );\n\nreturn {\n  status: messages[0].choices[0].message.content === \"emergency\" ? true : false\n}\n// return { emergencyMessages };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        460
      ],
      "id": "0b91c14f-0803-4cba-b08b-c509a675a5d8",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.yescale.io/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer sk-9HJ49JGZJaGPHNL2w3JsBm6MmE5RLBAel4HgCVLGhEmZFXhd"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ \n    {\n      \"model\": 'gpt-4o',\n      \"messages\": [\n           {\n                role: \"system\",\n                content: \"Bạn là một trợ lý thông minh. Xác định xem tin nhắn sau có chứa yêu cầu khẩn cấp hay không. Trả lời chỉ với 'emergency' hoặc 'not emergency'\",\n              },\n        { \n        content: $('When chat message received').item.json.chatInput,\n        role: 'user'\n        }\n      ],\n      \"temperature\": 1,\n      \"stream\": false,\n      \"best_of\": 1\n    }\n}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        0
      ],
      "id": "1b99fcaf-ed1c-404c-93ac-2df097550fbf",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9b96ad2d-e104-48f5-8155-a9b0344426e4",
              "leftValue": "={{ $json.status }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        960,
        260
      ],
      "id": "326c520a-7ed5-471c-9eca-56be0d86e493",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8080/ask",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{{ \n\"session_id\": $('When chat message received').item.json.sessionId,\n\"question\":$('When chat message received').item.json.chatInput\n} }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": ""
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1480,
        460
      ],
      "id": "8ae0436b-da71-4966-9574-90776d170680",
      "name": "HTTP Request2",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://localhost:8080/ask",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\"session_id\":$('When chat message received').item.json.sessionId,\n\"question\":$('When chat message received').item.json.chatInput} }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "text",
              "outputPropertyName": "="
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1400,
        100
      ],
      "id": "9e7f9cb9-78e2-40dd-9399-c960e5f7762a",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "public": true,
        "mode": "webhook",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1500,
        580
      ],
      "id": "fc2736b6-a340-4778-822c-a1e473f02a32",
      "name": "When chat message received",
      "webhookId": "97a196f3-6d21-4df6-bbcb-ba0dbe7376ae"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0adc53ba-c91c-49cd-95c8-6edc3766a16a",
              "name": "text",
              "value": "=Chúng tôi đã nhận diện tình huống khẩn cấp của bạn. Vui lòng giữ liên lạc và chúng tôi sẽ hỗ trợ bạn ngay lập tức.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1620,
        100
      ],
      "id": "9dcfe854-dcf0-4410-b831-5c6e178418c6",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90cdc263-dd34-4be0-9d12-0b9acf5768ff",
              "name": "text",
              "value": "={{ $json[''] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1800,
        460
      ],
      "id": "4513377b-7116-4eed-a655-8389ff52bf44",
      "name": "Edit Fields7"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "226be37e-4fd9-4b56-9200-395d4658cd56",
              "name": "text",
              "value": "Vui lòng nhập số điện thoại trước",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        540,
        660
      ],
      "id": "4e1a6faa-89a3-4590-9a45-87fcbef01d4d",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "Session",
        "fields": "isPhone,numberPhone,sessionId",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        60,
        820
      ],
      "id": "7e6d6b4d-5b9a-4c06-a0db-ed9223d0ac10",
      "name": "MongoDB",
      "credentials": {
        "mongoDb": {
          "id": "eYZbQfogKztMJ0WA",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "53d5a2c8-08ef-4516-9fa5-c8153bcbd4dc",
              "name": "isPhone",
              "value": "={{$json.isPhone}}",
              "type": "boolean"
            },
            {
              "id": "34132651-e150-434e-9440-5990bcd23ece",
              "name": "numberPhone",
              "value": "={{$json.phoneNumber}}",
              "type": "string"
            },
            {
              "id": "c57e947d-c927-42c9-b6c8-666e2896c584",
              "name": "sessionId",
              "value": "={{ $('When chat message received').item.json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -120,
        700
      ],
      "id": "cee4f57c-a51e-4b32-8429-ad052e0f404c",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "collection": "Session",
        "options": {},
        "query": "={\n  \"sessionId\" : \"{{$json.sessionId}}\",\n  \"isPhone\" : true\n}\n"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        -960,
        620
      ],
      "id": "561b921d-13d3-46fd-aa68-3339947f8755",
      "name": "MongoDB1",
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "mongoDb": {
          "id": "eYZbQfogKztMJ0WA",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "3d0a75bf-9af2-4790-a7ec-988531c5d0eb",
              "leftValue": "={{ $json.isPhone }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -680,
        620
      ],
      "id": "11e0ab60-8620-4054-a3eb-c88d2233a04f",
      "name": "If2"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  console.log(item.json)\n  const isPhone = item.json.numberPhone  != null ? item.json.isPhone : false; // Kiểm tra null hoặc undefined\n  console.log(\"isPhone:\", isPhone);\n  return { \n    json: { \n      isPhone: isPhone \n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -780,
        920
      ],
      "id": "0d11c9b0-03ff-4e69-8d22-fd66adb18d7e",
      "name": "IsPhone"
    },
    {
      "parameters": {
        "jsCode": "const chatInput = $('When chat message received').itemMatching(0).json.chatInput ;\nif (!chatInput) {\n  return [{ json: { isPhone: false, phoneNumber: null, message: \"Không có đầu vào văn bản, vui lòng thử lại.\" } }];\n}\nconst phoneRegex = /\\b\\d{9,15}\\b/g;\nconst phoneNumbers = chatInput.match(phoneRegex);\nif (phoneNumbers) {\n  return phoneNumbers.map(phone => {\n    return { \n      json: { \n        isPhone: true, \n        phoneNumber: phone \n      } \n    };\n  });\n} else {\n  return [{ \n    json: { \n      isPhone: false, \n      phoneNumber: null, \n    } \n  }];\n}\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -440,
        940
      ],
      "id": "d21ebf53-4280-4a3e-9f47-70abb28c0da2",
      "name": "getPhone",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:8000/api/users/pushNoti",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "{{$json.phoneNumber}}"
            },
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1140,
        40
      ],
      "id": "eda67af8-ae17-4aad-964f-8129d8e1f0f7",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "87d62a01-8b54-4d3a-a645-c53af20bea36",
              "leftValue": "={{ $json.isPhone }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        280,
        820
      ],
      "id": "5dd8416f-fedc-44eb-b826-90cc6c7bdb3c",
      "name": "If1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "95773902-c4c5-4f4e-9dfc-d24678f86170",
              "name": "text",
              "value": "Ok roi ban nhap cau hoi di",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        540,
        920
      ],
      "id": "935cfa07-aded-40db-8d48-8cd4c0eecb9c",
      "name": "Edit Fields4"
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "MongoDB1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB1": {
      "main": [
        [
          {
            "node": "IsPhone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "MongoDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "getPhone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IsPhone": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getPhone": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1f814f19-e011-4b3d-8a61-4aa55feb311a",
  "meta": {
    "instanceId": "72d05a087dedc42d498b1b8eb58c92e67ada6d297bbc006317156162b2bda2b2"
  },
  "id": "muSav4FXLGoRb8wR",
  "tags": []
}